#!/bin/bash
# popcorntime v2.0 final by looneytkpâ„¢
set -e
NC='\033[0m';Y='\033[1;33m';LC='\033[1;36m';LR='\033[1;31m';LB='\033[1;34m';LG='\033[1;32m';bit=$(uname -m)
shopt -u nocasematch

start64() {
sleep 0.3;echo -e "
"
echo -e "- ${LC}Popcorn Time for 64bit PC"
echo -e "${NC}-              ${LC}by looneytkp${NC}";echo
}

start32() {
sleep 0.3;echo -e "
"
echo -e "- ${LC}Popcorn Time for 32bit PC"
echo -e "${NC}-              ${LC}by looneytkp${NC}";echo
}

cde() {
	NAME="Popcorn Time"
	COMMENT="Watch Movies and TV Shows instantly!"
	CURRENT_DIR=$(pwd)
	EXECUTABLE=$CURRENT_DIR/Popcorn-Time
	ICON_PATH=$CURRENT_DIR/src/app/images/icon.png
	DESTINATION_DIR=/home/$(whoami)/.local/share/applications
	DESKTOP_FILE=$DESTINATION_DIR/popcorn-time.desktop
	echo "[Desktop Entry]" > $DESKTOP_FILE
	echo "Version=1.0" >> $DESKTOP_FILE
	echo "Type=Application" >> $DESKTOP_FILE
	echo "Name=$NAME" >> $DESKTOP_FILE
	echo "Icon=$ICON_PATH" >> $DESKTOP_FILE
	echo "Exec=\"$EXECUTABLE\" %U" >> $DESKTOP_FILE
	echo "Comment=$COMMENT" >> $DESKTOP_FILE
	echo "Categories=Multimedia;" >> $DESKTOP_FILE
	echo "Terminal=false" >> $DESKTOP_FILE
}

lch() {
read -p "- Launch Popcorn Time ? (Y)es/(N)o > " resp;
case $resp in
    y|yes) echo "- Launching...";
           ./Popcorn-Time
           instcomp;;
    n|no) instcomp;;
esac
}

instcomp() {
echo "- Creating Desktop Entry..."
sudo -p "- [sudo] password for $USER: " gtk-update-icon-cache /usr/share/icons/hicolor;
sleep 0.3
if [ -e popcorn64.tar.xz -o -e popcorn32.tar.xz ];then
    read -p "- Delete Popcorn Time package ? (Y)es/(N)o > " del
    case $del in
        y|yes) file="popcorn*.tar.xz"
               rm $file
               echo "- Deleted!";;
    esac;
fi
echo
echo -e "- GTK icon cache is updated, you should find Popcorn Time in your app list."
echo "- To uninstall the app, delete the popcorntime folder in you /Home directory.";
echo "- Or enter 'rm -rf ~/popcorntime' in terminal."
echo "- Enjoy :)";sleep 0.3;echo
echo -e "- ${LC}Installation complete!${NC}";
if [ -e check ];then rm check;fi
echo;exit
}

check() {
curl -X POST -s --show-error -o out www.google.com 2> check | printf "";
if grep -q "(6)" check;then
    sleep .8;echo "no internet connection.";rm check;
    dir_chk
    echo "- Aborting...";sleep 0.3;
    echo;exit;
fi;
}

start() {
if [ $bit = "x86_64" ]; then
    echo -e "- OS Architecture: ${LG}64bit${NC}";
else
    echo -e "- OS Architecture: ${LG}32bit${NC}";
fi
}

extract() {
echo "- Installing...";
if [ $bit = "x86_64" ]; then
    tar xf popcorn64.tar.xz &
    pid=$!;printf "%b" "- [";i=0;while kill -0 $pid 2>/dev/null;
    do i=$(( (i+1) %4 ));printf "#";sleep .3;done;echo -e "] Done!";cde;lch
else
    tar xf popcorn32.tar.xz &
    pid=$!;printf "%b" "- [";i=0;while kill -0 $pid 2>/dev/null;
    do i=$(( (i+1) %4 ));printf "#";sleep .3;done;echo -e "] Done!";cde;lch
fi
}

reinstall() {
echo
read -p "- Reinstall Popcorn Time ? (Y)es/(N)o > " rs
case $rs in
    y|yes) instal;;
    n|no) echo "- Aborted."
          echo;exit;;
esac
}

dir_chk() {
if [ "$1" == "-f" ];then
    ls > directory_check
    size=$(wc -l <directory_check)
    if [ $size -lt 10 ];then
        sleep .2;echo "Empty."
        rm directory_check;instal;exit;
    else
        rm directory_check
    fi

else
    ls > directory_check
    size=$(wc -l <directory_check)
    if [ $size -lt 10 ]; then
        rm -rf ~/popcorntime
    else
        rm directory_check
    fi
fi
}

packsize() {
if [ -e popcorn64.tar.xz -o -e popcorn32.tar.xz ];then
    file="popcorn*.tar.xz"
    size=$(wc -c < $file)
    if [ $size -ge 63421856 ];then
        echo "- Popcorn Time package already downloaded."
    else
        rm $file
        instal
    fi
fi
}

instal() {
if [ -d ~/popcorntime ];then
    cd ~/popcorntime
fi
if [ -e popcorn64.tar.xz -o -e popcorn32.tar.xz ];then
    packsize
    extract
else
    echo
    echo "- Popcorn Time package not downloaded."
    read -p "- Do you want to download it ? [Y/n]> " dl
    if [ $dl = y ]; then printf "%b" "- Checking connection...";check;wget -q popcorntime.sh
        sed -n '35p' index.html > index.txt
        grab64=$(sed -e 's/.*"><a data-os="Linux 64" href="//' -e 's/" class="btn-main icon-linux">Download Popcorn Time 3.10<\/a><br><small><span>For 64-bit Linux<\/span><span class="divider"> <\/span><a href="https:\/\/get.popcorntime.sh">Other operating systems and platforms<\/a><\/small><\/li><li title="Popcorn Time" class="download dl-android"><a.*//' index.txt);
        grab32=$(sed -e 's/.*"><a data-os="Linux 32" href="//' -e 's/" class="btn-main icon-linux">Download Popcorn Time 3.10<\/a><br><small><span>For 32-bit Linux<\/span><span class="divider"> <\/span><a href="https:\/\/popcorntime.sh\/linux.html">Other operating systems and platforms<\/a><\/small><\/li><li class="download dl-lin-64"><a.*//' index.txt);
        if [ $bit = "x86_64" ]; then
            echo "downloading Popcorn Time 64bit..."
            check;wget -q --show-progress "$grab64";mv Popcorn-Time-* popcorn64.tar.xz;rm index*
            extract
        else
            echo "downloading Popcorn Time 32bit..."
            check;wget -q --show-progress "$grab32";mv Popcorn-Time-* popcorn32.tar.xz;rm index*
            extract
        fi
    else
        dir_chk
        echo "- Installation aborted.";echo;exit;
    fi
fi
}

if [ $bit = "x86_64" ];then
    start64;start;
else
    start32;start;
fi
if [ -d ~/popcorntime ];then
    cd ~/popcorntime;echo
    echo "- Installation directory present."
    printf "%b" "- Checking content = "
    dir_chk -f
    sleep .2;echo "Not Empty.";sleep .2
    echo "- Checking for errors...";echo;
    DIR="lib locales node_modules pnacl src"
    if [ -d lib -a -d locales -a -d node_modules -a -d pnacl -a -d src ];then
        zip -r1q zip.zip $DIR
        old="301526"
        new=$(wc -l <zip.zip)
        if [ $new == $old ];then
            set -- $DIR
            for b in "$@"
                do
                    sleep .1
                    echo "- $b directory exists"
            done
            rm zip.zip && echo
        else
            echo "- Error found!"
            rm zip.zip
            reinstall
        fi
    else
        echo "- Error found!"
        reinstall
    fi
    files="chromedriver icudtl.dat minidump_stackwalk nacl_helper nacl_helper_bootstrap nacl_irt_x86_64.nexe natives_blob.bin nw_100_percent.pak nw_200_percent.pak nwjc package.json payload Popcorn-Time resources.pak snapshot_blob.bin .git.json"
    set -- $files
    for a in "$@"
        do
            if [ -e $a ]; then
                sleep .1
                echo "- $a file exists."
            else
                sleep .1
                printf "%b" "- Error found = "
                echo "$a does not exist."
                reinstall
            fi
    done
    echo;echo "- No errors found.";
    echo "- It seems Popcorn Time is already installed."
    echo "- Launch it to test if it works."
    echo "- Update Desktop Entry if Popcorn Time icon does not show."
    echo "- Or simply Reinstall it if launching fails."
    read -p "- (L)aunch / (U)pdate / (R)einstall / (A)bort > " opt
    case $opt in
        l|launch) echo "- Launching...";./Popcorn-Time;echo;exit;;
        r|reinstall) if [ -e popcorn64.tar.xz -o -e popcorn32.tar.xz ];then
                        file="popcorn*.tar.xz"
                        mv $file ~/Downloads
                        rm -rf *
                        mv ~/Downloads/$file ~/popcorntime
                        echo && instal
                        else
                            instal
                        fi;;
        u|update) cde;instcomp;;
        a|abort) echo "- Aborted.";echo;exit
    esac
else
    mkdir ~/popcorntime;
    instal
fi
